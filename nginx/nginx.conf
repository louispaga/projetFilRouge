user  nginx;

events {
	worker_connections 100;
}

http 
{
	#limit of 3 requests per second for an ip adress
	limit_req_zone $binary_remote_addr zone=mylimit:1m rate=3r/s;
	
	server 
	{
		listen 80;
		server_name filrouge.louis.p2021.ajoga.fr;
		location / 
		{
			return 301 https://$host$request_uri;
		}
    	}
    	
    	server 
    	{
    		listen 443 ssl;
	
		server_name filrouge.louis.p2021.ajoga.fr;
		access_log /var/log/nginx/access.log;
		limit_req_status 429; #limit request message 
		
		# Error responses
		error_page 404 = @400;         # Invalid paths are treated as bad requests
		proxy_intercept_errors on;     # Do not send backend errors to the client
    		
    		ssl_certificate /etc/letsencrypt/live/filrouge.louis.p2021.ajoga.fr/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/filrouge.louis.p2021.ajoga.fr/privkey.pem;
		include /etc/letsencrypt/options-ssl-nginx.conf;
		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    		location /
    		{
			auth_basic "Administrator's area";
                        auth_basic_user_file /etc/nginx/.htpasswd;
                        client_max_body_size 15M;
                        limit_req zone=mylimit burst=2; #put 2 req max in a Queue
                        proxy_pass http://flaskapp;   		
    		}
    	}
    	
    	upstream flaskapp 
    	{ 
		server 172.18.0.1:5000;
		server 172.18.0.2:5000;
		server 172.18.0.3:5000;
		server 172.18.0.4:5000;
	}
}
